#!/usr/bin/python
# vim:expandtab:autoindent:tabstop=4:shiftwidth=4:filetype=python:tw=0

  #############################################################################
  #
  # Copyright (c) 2005 Dell Computer Corporation
  # Dual Licenced under GNU GPL and OSL
  #
  #############################################################################
"""bootstrap_firmware [options]
"""

from __future__ import generators

# import arranged alphabetically
import locale
import os
import sys

# these are replaced by autotools when installed.
__VERSION__="unreleased_version"
SYSCONFDIR=os.path.join(os.path.dirname(os.path.realpath(sys.argv[0])),"..","etc")
PYTHONDIR=os.path.join(os.path.dirname(os.path.realpath(sys.argv[0])),"..")
PKGPYTHONDIR=os.path.join(os.path.dirname(os.path.realpath(sys.argv[0])),"..","firmwaretools")
PKGDATADIR=os.path.join(os.path.dirname(os.path.realpath(sys.argv[0])),"..")
CONFDIR=os.path.join(SYSCONFDIR,"firmware")
# end build system subs

# import all local modules after this. This allows us to run from build tree
sys.path.insert(0,PYTHONDIR)

# our modules
import firmwaretools.config
import firmwaretools.clifuncs

def debianCleanName(s):
    s = s.replace('_', '-')
    s = s.replace('(', '-')
    s = s.replace(')', '')
    s = s.lower()
    return s


def main(args):
    try:
        locale.setlocale(locale.LC_ALL, '')
    except locale.Error, e:
        # default to C locale if we get a failure.
        print >> sys.stderr, 'Failed to set locale, defaulting to C'
        locale.setlocale(locale.LC_ALL, 'C')

    try:
        cfg = firmwaretools.config.FTConfig(usage=__doc__, version=__VERSION__)
        cfg.add_option("-u", "--up2date_mode", action="store_true", dest="comma_separated", default=False, help="Comma-separate values for use with up2date.")
        cfg.add_option("-a", "--apt_mode", action="store_true", dest="apt_mode", default=False, help="fixup names so that they are compatible with apt")

        opts, args = cfg.parse(sys.argv[1:])

        for pkg in firmwaretools.clifuncs.runBootstrapInventory(cfg):
            if opts.apt_mode:
                sys.stdout.write( "%s " % debianCleanName(pkg.name) )
            elif opts.comma_separated:
                sys.stdout.write( "%s," % pkg.name )
            else:
                print "%s" % pkg.name

    except Exception, e:
        print
        print e
        print
        print __doc__
        sys.exit(2)

    return 0 #shell logic


if __name__ == "__main__":
    sys.exit( main(sys.argv[1:]) )

