#!/usr/bin/python
# vim:expandtab:autoindent:tabstop=4:shiftwidth=4:filetype=python:tw=0

  #############################################################################
  #
  # Copyright (c) 2005 Dell Computer Corporation
  # Dual Licenced under GNU GPL and OSL
  #
  #############################################################################
"""inventory_firmware [options]
"""

from __future__ import generators

# import arranged alphabetically
import locale
import os
import sys

# these are replaced by autotools when installed.
__VERSION__="unreleased_version"
SYSCONFDIR=os.path.join(os.path.dirname(os.path.realpath(sys.argv[0])),"..","etc")
PYTHONDIR=os.path.join(os.path.dirname(os.path.realpath(sys.argv[0])),"..")
PKGPYTHONDIR=os.path.join(os.path.dirname(os.path.realpath(sys.argv[0])),"..","firmwaretools")
PKGDATADIR=os.path.join(os.path.dirname(os.path.realpath(sys.argv[0])),"..")
CONFDIR=os.path.join(SYSCONFDIR,"firmware")
# end build system subs

# import all local modules after this. This allows us to run from build tree
sys.path.insert(0,PYTHONDIR)

# our modules
import firmwaretools.config
import firmwaretools.clifuncs

def main(args):
    try:
        locale.setlocale(locale.LC_ALL, '')
    except locale.Error, e:
        # default to C locale if we get a failure.
        print >> sys.stderr, 'Failed to set locale, defaulting to C'
        locale.setlocale(locale.LC_ALL, 'C')


    try:
        cfg = firmwaretools.config.FTConfig(usage=__doc__, version=__VERSION__)
        args = cfg.parse(sys.argv[1:])

        for pkg in firmwaretools.clifuncs.runInventory(cfg):
            sys.stdout.write( "%s = %s\n" % (str(pkg), pkg.version) )

    except Exception, e:
        print e
        sys.exit(2)

    return 0 #shell logic


if __name__ == "__main__":
    sys.exit( main(sys.argv[1:]) )

